import{_ as r,o as c,c as d,a as n}from"./index-098ec0e6.js";const u={data(){return{peerConnection:null,localStream:null,remoteStream:null,isInCall:!1}},methods:{async startCall(){const e=await navigator.mediaDevices.getUserMedia({audio:!0});console.log(e),this.localStream=e,this.$refs.localAudio.srcObject=e,this.peerConnection=new RTCPeerConnection,console.log(this.peerConnection),this.peerConnection.addStream(e),this.peerConnection.onaddstream=o=>{this.remoteStream=o.stream,this.$refs.remoteAudio.srcObject=o.stream};const t=await this.peerConnection.createOffer();await this.peerConnection.setLocalDescription(t),this.isInCall=!0,this.$refs.remoteAudio.addEventListener("volumechange",o=>{const i=this.$refs.remoteAudio;console.log(i,o)})},endCall(){this.peerConnection.close(),this.localStream.getTracks().forEach(e=>e.stop()),this.isInCall=!1}}},m=["muted"],C=["muted"],h=["disabled"],f=["disabled"];function p(e,t,o,i,s,l){return c(),d("div",null,[n("audio",{ref:"remoteAudio",muted:!s.isInCall},null,8,m),n("audio",{ref:"localAudio",muted:!s.isInCall},null,8,C),n("button",{onClick:t[0]||(t[0]=(...a)=>l.startCall&&l.startCall(...a)),disabled:s.isInCall},"Start Call",8,h),n("button",{onClick:t[1]||(t[1]=(...a)=>l.endCall&&l.endCall(...a)),disabled:!s.isInCall},"End Call",8,f)])}const b=r(u,[["render",p]]);export{b as default};
